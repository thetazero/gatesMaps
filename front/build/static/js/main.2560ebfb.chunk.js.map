{"version":3,"sources":["LocationInput.js","Directions.js","utils.js","App.js","config.js","reportWebVitals.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","LocationInput","navigate","from","bindFrom","resetFrom","to","bindTo","resetTo","started","setStarted","onSubmit","evt","preventDefault","className","placeholder","type","Directions","directions","map","step","i","niceNumber","num","afterzero","repeat","r","Math","floor","digits","ceil","log","LOG10E","String","length","padEnd","App","time","setTime","setDirections","timer","setTimer","timerStart","timerInterval","setTimerInterval","path","setPath","a","clearInterval","console","fetch","method","headers","body","JSON","stringify","route","newTime","json","data","description","Date","now","temp","setInterval","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2560ebfb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ip } from \"./config\";\n\nexport const useInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  }\n}\n\nexport default function LocationInput({ navigate }) {\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (started) {\n      resetFrom()\n      resetTo()\n      navigate('', '')\n    } else {\n      navigate(from, to)\n    }\n    setStarted(!started)\n  }\n\n  const { value: from, bind: bindFrom, reset: resetFrom } = useInput('');\n  const { value: to, bind: bindTo, reset: resetTo } = useInput('');\n\n  const [started, setStarted] = useState(false)\n\n  return (\n    <form onSubmit={handleSubmit} className=\"main-input\">\n      <input placeholder=\"From\" type=\"text\" {...bindFrom} />\n      <input placeholder=\"To\" type=\"text\" {...bindTo} />\n      <br />\n      <input className={started ? \"stop circle\" : \"start circle\"} type=\"submit\" value={started ? \"Finish\" : \"Start\"} />\n    </form>\n  );\n}","export default function Directions({ directions }) {\n  return (\n    <div className=\"directions\">\n      {directions.map((step, i) => {\n        return <p key={i}>{step}</p>\n      })}\n    </div>\n  )\n}","export function formatTime(seconds) {\n  seconds = Math.round(seconds)\n  return `${seconds}s`\n}\n\nexport function niceNumber(num, afterzero) {\n  if (num == 0) return `0.${'0'.repeat(afterzero)}`\n  let r = Math.floor(num * (10 ** afterzero)) / (10 ** afterzero)\n  let digits = Math.ceil(r)\n  digits = Math.log(digits) * Math.LOG10E + 1 | 0\n  if (String(r).length == digits + 1) return String(r)\n  if (String(r).length > digits + 1) return `${r}`.padEnd(digits + afterzero + 1, '0')\n  return `${r}.`.padEnd(digits + afterzero + 1, '0')\n}","import React, { useState } from 'react';\n\nimport './App.css';\nimport {ip} from \"./config\"\n\nimport LocationInput from './LocationInput';\nimport Directions from './Directions';\nimport { niceNumber } from './utils'\n\nfunction App() {\n  const [time, setTime] = useState(0)\n  const [directions, setDirections] = useState([])\n  const [timer, setTimer] = useState(0)\n  let timerStart = null\n  let [timerInterval, setTimerInterval] = useState(-1)\n  let [path, setPath] = useState([])\n\n  async function navigate(from, to) {\n    if (!from || !to) {\n      clearInterval(timerInterval)\n      setTimerInterval(-1)\n      console.log(path)\n      let newTime = await fetch(`${ip}/route`, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          route: path,\n          time: timer / 1000,\n        })\n      })\n      newTime = await newTime.json()\n      setTimer(0)\n      setTime(0)\n      setPath([])\n    } else {\n      let data = await fetch(`${ip}/route/${from}/${to}`)\n      data = await data.json()\n      setTime(data.time)\n      setDirections(data.description)\n      setPath(data.route)\n      setTimer(0)\n      timerStart = Date.now()\n      let temp = setInterval(() => {\n        setTimer(Date.now() - timerStart)\n      }, 1000 / 60)\n      setTimerInterval(temp)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"title\">Gates Maps</div>\n      <LocationInput navigate={navigate}></LocationInput>\n\n      <div className=\"time\">\n        {niceNumber(timer / 1000, 1)} / {niceNumber(time, 1)} s\n      </div>\n      <Directions directions={directions} />\n      <a\n        className=\"App-link\"\n        href=\"https://www.cmu.edu/finance/property-space/floorplan-room/acad-admin/GHC/index.html\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Gates Map\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","// export const ip = 'http://localhost:4200'\nexport const ip = ''","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}